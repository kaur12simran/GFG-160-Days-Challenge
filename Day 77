// User function Template for Java

class Solution {
    public ArrayList<ArrayList<Integer>> nQueen(int n) {
        // code here
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        boolean[] cols = new boolean[n];
        boolean[] diag1 = new boolean[2 * n];
        boolean[] diag2 = new boolean[2 * n];
        ArrayList<Integer> current = new ArrayList<>();
        solveNQueens(0, n, cols, diag1, diag2, current, result);
        return result;
    }
    
    private void solveNQueens(int col, int n, boolean[] cols, boolean[] diag1, boolean[] diag2, ArrayList<Integer> current, ArrayList<ArrayList<Integer>> result){
        
        if(col == n) {
            result.add(new ArrayList<>(current));
            return;
        }
        
        for(int row = 0; row < n; row++) {
            if(!cols[row] && !diag1[row + col] && !diag2[row - col + n]) {
                cols[row] = true;
                diag1[row + col] = true;
                diag2[row - col + n] = true;
                current.add(row + 1);
                
                solveNQueens(col + 1, n, cols, diag1, diag2, current, result);
                
                cols[row] = false;
                diag1[row + col] = false;
                diag2[row - col + n] = false;
                current.remove(current.size() - 1);
            }
        }
    }
}
