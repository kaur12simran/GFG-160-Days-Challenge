class Solution {
    
    static class Job {
        int deadline;
        int profit;
        Job(int d, int p) {
            this.deadline = d;
            this.profit = p;
        }
    }

    public ArrayList<Integer> jobSequencing(int[] deadline, int[] profit) {
        // code here
        int n = deadline.length;
        Job[] jobs = new Job[n];
        
        for(int i = 0; i < n; i++) {
            jobs[i] = new Job(deadline[i], profit[i]);
        }
        
        Arrays.sort(jobs, (a, b) -> b.profit - a.profit);
        
        int maxDeadline = 0;
        for(int d : deadline) {
            maxDeadline = Math.max(maxDeadline, d);
        }
        
        boolean[] slot = new boolean[maxDeadline + 1];
        int countJobs = 0; 
        int totalProfit = 0;
        
        for(Job job : jobs) {
            for(int t = job.deadline; t > 0; t--) {
                if(!slot[t]) {
                    slot[t] = true;
                    countJobs++;
                    totalProfit += job.profit;
                    break;
                }
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        result.add(countJobs);
        result.add(totalProfit);
        return result;
    }
}
