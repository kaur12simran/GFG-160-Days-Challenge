class Solution {
    
    static int[] dx = {-1, 1, 0, 0};
    static int[] dy = {0, 0, -1, 1};
    static public boolean isWordExist(char[][] mat, String word) {
        // Code here
        int n = mat.length;
        int m = mat[0].length;
        
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                if(mat[i][j] == word.charAt(0)) {
                    if(dfs(mat, word, i, j, 0, new boolean[n][m])) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
    
    static boolean dfs(char[][] mat, String word, int x, int y, int index, boolean[][] visited){
        if(index == word.length()) return true;
        
        if(x < 0 || y < 0 ||x >= mat.length || y >= mat[0].length || visited[x][y] || mat[x][y] != word.charAt(index)) {
            return false;
        }
        
        visited[x][y] = true;
        
        for(int dir = 0; dir < 4; dir++) {
            int newX = x + dx[dir];
            int newY = y + dy[dir];
            if(dfs(mat, word, newX, newY, index + 1, visited)) {
                return true;
            }
        }
        
        visited[x][y] = false;
        return false;
    }
}
